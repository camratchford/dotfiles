#!/bin/bas0

# Args:
#   $1 = URL
function execurl {
  bash <(curl -s $1)
}

# Executes tput commands to remove the previous row of terminal text
function del-prev-line {
  tput cuu1 && tput el
}


# Reads the first line in a file into a variable (found in /usr/lib/git-core/git-sh-prompt as '__git_eread')
# Args:
#   $1 = path of the file whose header you'd like to store
#   $2 = name of the variable in which you'd like to store the header

function read-file-header {
  test -r "$1" && IFS=$'\r\n' read "$2" <"$1"
}

# Scrubs the ~/.ssh/known_hosts file of any fingerprints assoicated to the hostname provided
# Will check DNS hostname, IPv4, IPv6 for associated known_host entries
# Args:
#   $1 = hostname (or IP)
#

function newsshhost() {
  ssh-keygen -f ~/.ssh/known_hosts -R $1
  local ip=$(grep $1 /etc/hosts | awk '{print $1}')
  if [[ -n $ip ]]; then
    ssh-keygen -f ~/.ssh/known_hosts -R $ip
  fi
  ip=$(dig -t a +short $1)
  if [[ -n $ip ]]; then
    ssh-keygen -f ~/.ssh/known_hosts -R $ip
  fi
  ip=$(dig -t aaaa +short $1)
  if [[ -n $ip ]]; then
    ssh-keygen -f ~/.ssh/known_hosts -R $ip
  fi
  ssh-keyscan -t ecdsa $1 >> ~/.ssh/known_hosts
}

# Logs the text to STDERR in red, formatted with the date.
# Args:
#   $* = Error Message
#

function err {
  err_format="[$(date +'%Y-%m-%dT%H:%M:%S%z')]:"
  ansi --red "${err_format} $*" >&2
}

# Executes the given command and logs to syslog
#  - Logs the successful execution of a command to syslog with the severity INFO if RC = 0
#  - Logs the contents of STDERR with severity ERROR if RC != 0
# Args:
#   $1 = Command to execute
#
function logcmdexec() {
  local CALLER_INFO="$(caller 0)"
  local LINE_NO="$(echo "$CALLER_INFO" | awk '{print 1}')"
  local FUNC_NAME="$(echo "$CALLER_INFO" | awk '{print 2}')"
  local SCRIPT_PATH="$(realpath "$(echo "$CALLER_INFO" | awk '{print 3}')")"

  local ERR="$(eval $CMD 2>&1 > /dev/null)"
  if [ $? != "0" ]; then
    /usr/bin/logger -t ERROR -i "$SCRIPT_PATH:$SCRIPT_NAME:$LINE_NO - $ERR"
    exit
  fi

  /usr/bin/logger -t INFO -i "$SCRIPT_PATH:$SCRIPT_NAME:$LINE_NO - Completed successfully"
}


